name: Generate Snake

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate snake animation
        uses: Platane/snk@v3  
        with:
          github_user_name: ${{ github.repository_owner }}
          args: |
            --snake_color '#00BFFF'  #  Добавил '#' перед hex-кодом (важно!)
            --show_progress_bar false
            --svg_out_path dist/github-contribution-grid-snake.svg
            --gif_out_path dist/github-contribution-grid-snake.gif

      - name: Commit & Push changes
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')
            const dist_dir = './dist'
            if (!fs.existsSync(dist_dir)) {
              fs.mkdirSync(dist_dir)
            }
            console.log("Making changes...");
            await github.rest.git.createBlob({
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: fs.readFileSync('./dist/github-contribution-grid-snake.svg', { encoding: 'utf8' }),
              encoding: 'utf8'
            });
            await github.rest.git.createBlob({
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: fs.readFileSync('./dist/github-contribution-grid-snake.gif', { encoding: 'base64' }),
              encoding: 'base64'
            });
            console.log("Pushing new commits...");
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'readme.md',
              message: 'docs: update github-snake',
              content: fs.readFileSync('./readme.md', { encoding: 'utf8' }).replace(/<div id="github-snake">[\s\S]*<\/div>/, `<div id="github-snake"><img src="" alt="github-snake"/></div>`),  # Добавил путь к изображению в src
              sha: (await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'heads/main'
              })).data.object.sha,
              committer: {
                name: 'github-actions[bot]',
                email: 'github-actions[bot]@users.noreply.github.com'
              },
              author: {
                name: 'github-actions[bot]',
                email: 'github-actions[bot]@users.noreply.github.com'
              }
            });
